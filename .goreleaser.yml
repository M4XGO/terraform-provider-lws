# Configuration GoReleaser pour le Terraform Registry
# Documentation: https://goreleaser.com

before:
  hooks:
    - go mod tidy

builds:
  - id: terraform-provider-lws
    env:
      # GoReleaser ne fonctionne pas avec CGO
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
    # Plateformes requises par le Terraform Registry
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    # Exclure les architectures non supportées par Terraform
    ignore:
      - goos: windows
        goarch: arm64
    # Format de binaire requis par le Terraform Registry
    binary: '{{ .ProjectName }}_v{{ .Version }}'

archives:
  - id: terraform-provider-lws-archive
    builds:
      - terraform-provider-lws
    # Format requis par le Terraform Registry
    format: zip
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
    files:
      # Inclure seulement le binaire (pas de fichiers supplémentaires)
      - none*

checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256

signs:
  # Signature GPG requise par le Terraform Registry (fichier SHASUMS)
  - artifacts: checksum
    cmd: gpg
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"
  # Signature GPG des archives binaires (recommandée pour la sécurité)
  - artifacts: archive
    cmd: gpg
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

# Configuration pour GitHub Release
release:
  draft: false
  make_latest: true
  name_template: "v{{ .Version }}"
  header: |
    ## Terraform Provider LWS v{{ .Version }}
    
    This release contains the Terraform Provider for LWS (French DNS provider).
    
    ### Installation
    
    This provider is published to the [Terraform Registry](https://registry.terraform.io/providers/maximenony/lws/latest).
    
    Add to your Terraform configuration:
    ```hcl
    terraform {
      required_providers {
        lws = {
          source  = "maximenony/lws"
          version = "~> {{ .Version }}"
        }
      }
    }
    ```

changelog:
  use: github
  sort: asc
  abbrev: 0
  groups:
    - title: '🚀 Features'
      regexp: "^.*feat[(\\w)]*:+.*$"
      order: 0
    - title: '🐛 Bug Fixes'
      regexp: "^.*fix[(\\w)]*:+.*$"
      order: 1
    - title: '📚 Documentation'
      regexp: "^.*docs[(\\w)]*:+.*$"
      order: 2
    - title: '🧪 Tests'
      regexp: "^.*test[(\\w)]*:+.*$"
      order: 3
    - title: '⚡ Performance'
      regexp: "^.*perf[(\\w)]*:+.*$"
      order: 4
    - title: '🔧 Maintenance'
      regexp: "^.*(refactor|chore|ci)[(\\w)]*:+.*$"
      order: 5
    - title: Others
      order: 999