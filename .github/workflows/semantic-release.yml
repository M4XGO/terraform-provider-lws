name: Semantic Release

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write
  issues: write
  pull-requests: write

env:
  NODE_VERSION: '20'

jobs:
  semantic-release:
    runs-on: ubuntu-latest
    outputs:
      released: ${{ steps.semantic.outputs.new_release_published }}
      version: ${{ steps.semantic.outputs.new_release_version }}
      tag: ${{ steps.semantic.outputs.new_release_git_tag }}
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install semantic-release dependencies
      run: |
        npm install -g semantic-release
        npm install -g @semantic-release/changelog
        npm install -g @semantic-release/git
        npm install -g @semantic-release/github
        npm install -g @semantic-release/exec

    - name: Create semantic-release config
      run: |
        cat > .releaserc.json << 'EOF'
        {
          "branches": ["main"],
          "plugins": [
            "@semantic-release/commit-analyzer",
            "@semantic-release/release-notes-generator",
            [
              "@semantic-release/changelog",
              {
                "changelogFile": "CHANGELOG.md"
              }
            ],
            [
              "@semantic-release/exec",
              {
                "prepareCmd": "echo 'Preparing release ${nextRelease.version}'"
              }
            ],
            [
              "@semantic-release/github",
              {
                "assets": []
              }
            ],
            [
              "@semantic-release/git",
              {
                "assets": ["CHANGELOG.md"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
              }
            ]
          ]
        }
        EOF

    - name: Run semantic-release
      id: semantic
      run: |
        npx semantic-release --debug
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GIT_AUTHOR_NAME: github-actions[bot]
        GIT_AUTHOR_EMAIL: github-actions[bot]@users.noreply.github.com
        GIT_COMMITTER_NAME: github-actions[bot]
        GIT_COMMITTER_EMAIL: github-actions[bot]@users.noreply.github.com

    - name: Summary
      if: steps.semantic.outputs.new_release_published == 'true'
      run: |
        echo "ðŸŽ‰ New release published!"
        echo "Version: ${{ steps.semantic.outputs.new_release_version }}"
        echo "Tag: ${{ steps.semantic.outputs.new_release_git_tag }}"
        echo "Release URL: ${{ steps.semantic.outputs.new_release_url }}"

  trigger-release:
    needs: semantic-release
    if: needs.semantic-release.outputs.released == 'true'
    runs-on: ubuntu-latest
    steps:
    - name: Trigger Release Workflow
      run: |
        echo "New tag ${{ needs.semantic-release.outputs.tag }} was created"
        echo "The release workflow will be triggered automatically"
        echo "Release URL will be available at: https://github.com/${{ github.repository }}/releases/tag/${{ needs.semantic-release.outputs.tag }}" 